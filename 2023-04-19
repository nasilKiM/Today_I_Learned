2023-04-19

- Naver Map API 연결관련 스터디
- 참고사이트 : https://zeakd.github.io/react-naver-maps/

2023-04-20

1. 용어정리

- 줌/레벨 (지도가 확대되는 정도 ex. 250m)
- 오버레이 (지리적 정보를 시각화를 위해 지도위에 추가할 수 있는 대체)
- 마커 (지도에 올라가는 핀 모양의 이미지 표시)
- 인포윈도우 (지도 위에 지정된 정보창 제공 -- 주로 txt 데이터)

2.  지도 API의 주요기능

- 지도생성
- 지도의 옵션과 유형변경
- 지도 위치 설정 및 이동

       function setCenter() {
       // 이동할 위도 경도 위치 생성
       let moveLocation = new kakao.maps.LatLng(33.452613, 126.570888);

           // 지도 중심이동
           map.setCenter(moveLocation);

       }

       function pinTo() {
       // 이동할 위도 경도 위치를 생성
       let moveLocation = new kakao.maps.LatLng(33.450580, 126.5749942);

           //지도 중심을 부드럽게 이동
           // 이동할 거리가 보여지는 지도화면보다 클때는 부드러운 효과x
           map.pinTo(moveLocation);

       }

- 마커, 인포윈도우 등 오버레이 띄우기
- 이벤트 등록

2023-04-21

1. 지도 API 활용 사례

 [공식문서내용]
    실제 지도그리는 js api 불러오기
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey={API_KEY}"></script>

 [public/index.html]
    <body>
        <div id="root"></div>

        <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey={API_KEY}&libraries=services"></script>

    </body>

2. map.js

import React, {useEffect} from "react";
const {kakao} = window;

export default function Map(){
    
    useEffect(()=>{
        let mapContainer = document.getElementById('map') // 지도표시할div

        // 지도 옵션 설정
        let mapOption = {
            center: new kakao.maps.LatLng(33.450701, 126.570667), //지도 중심좌표
            level : 3 // 지도 확대 레벨
        };

        // 지도 표시할 div + 지도옵션으로 지도생성
        let map = new kakao.maps.Map(mapContainer, mapOption);
}, [])

return(
    <div id="map" style={{width:"80%", height:"80%",}}></div>
)

}

2023-04-22

1. info window 에 event 등록

// 마커클릭 시, 마커위 infWindow 생성
let infoWindowContent = '<div style="padding:10px">Hello World!</div>', infoWindowRemovable = true;

// 인포윈도우 생성
let infoWindow = new kakao.maps.infoWindow({
    content: infoWindowContent,
    removable: infoWindowRemovable,
});

// 클릭이벤트 등록
kakao.maps.event.addEventListener(marker, 'click', function() {
    // 마커 위 infoWindow 표시
    infoWindow.open(map, marker);
});

2. 선언된 이벤트 핸들러
 let infoWindowContent = `
    <div>카페명: ${data.cafeName}</div>
    <div>영업시간: ${data.time}</div>
    <div>시급: ${data.hourlywage}</div>
    <button onclick="${eventHandler}">알바지원하기</button>
 `
 let infoWindowClick = new kakao.maps.infoWindow({
    content: infoWindowContent,
    removable: true,
});

<개선필요사항>
--> 해당하는 위치에 뿌려지는게 아니라, 전체리스트가 나온다. 